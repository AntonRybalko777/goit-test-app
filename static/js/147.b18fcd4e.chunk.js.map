{"version":3,"file":"static/js/147.b18fcd4e.chunk.js","mappings":"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","sources":["components/Filter/Filter.js","components/CarsList/CarsList.js","pages/catalog.js"],"sourcesContent":["import Makes from '../../data/makes.json';\nimport Prices from '../../data/price.json';\nimport {\n  changeFilterBrand,\n  changeFilterPrice,\n  changeFilterMileageFrom,\n  changeFilterMileageTo,\n} from '../../redux/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nconst filterSchema = Yup.object().shape({\n  brand: Yup.string(),\n  price: Yup.string(),\n  mileageFrom: Yup.number(),\n  mileageTo: Yup.number(),\n});\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        brand: 'All',\n        price: 'All',\n        mileageFrom: '',\n        mileageTo: '',\n      }}\n      validationSchema={filterSchema}\n      onSubmit={(values, actions) => {\n        dispatch(changeFilterBrand(values.brand));\n        dispatch(changeFilterPrice(values.price));\n        dispatch(changeFilterMileageFrom(values.mileageFrom));\n        dispatch(changeFilterMileageTo(values.mileageTo));\n      }}\n    >\n      <Form>\n        <Field as=\"select\" name=\"brand\">\n          {Makes.map((make, idx) => (\n            <option key={idx} value={make}>\n              {make}\n            </option>\n          ))}\n        </Field>\n        <Field as=\"select\" name=\"price\">\n          {Prices.map((price, idx) => (\n            <option key={idx} value={price}>\n              {price}\n            </option>\n          ))}\n        </Field>\n        <Field name=\"mileageFrom\" type=\"number\" />\n        <Field name=\"mileageTo\" type=\"number\" />\n        <button type=\"submit\">Search</button>\n      </Form>\n    </Formik>\n  );\n};\n\n// import Box from '@mui/material/Box';\n// import InputLabel from '@mui/material/InputLabel';\n// import MenuItem from '@mui/material/MenuItem';\n// import FormControl from '@mui/material/FormControl';\n// import Select from '@mui/material/Select';\n\n// <Box sx={{ width: 250, paddingBottom: '40px' }}>\n//   <FormControl fullWidth>\n//     <InputLabel id=\"make\">Car brand</InputLabel>\n//     <Select\n//       labelId=\"make\"\n//       label=\"Car brand\"\n//       value={filter}\n//       onChange={evt => dispatch(changeFilterBrand(evt.target.value))}\n//     >\n//       {Makes.map((make, idx) => (\n//         <MenuItem key={idx} value={make}>\n//           {make}\n//         </MenuItem>\n//       ))}\n//     </Select>\n//   </FormControl>\n// </Box>\n","import { CarCard } from 'components/CarCard/CarCard';\nimport { useSelector } from 'react-redux';\nimport { Filter } from 'components/Filter/Filter';\nimport {\n  selectFilteredCars,\n  selectEndofList,\n  selectFilterBrand,\n} from '../../redux/selectors';\nimport { List, Button } from './CarsList.styled';\nimport { useEffect, useState } from 'react';\nimport { fetchData } from '../../redux/operations';\nimport { useDispatch } from 'react-redux';\n\nexport const CarsList = () => {\n  const [page, setPage] = useState(1);\n  const filteredCars = useSelector(selectFilteredCars);\n  const filter = useSelector(selectFilterBrand);\n  const endOfList = useSelector(selectEndofList);\n  const dispatch = useDispatch(selectFilterBrand);\n\n  useEffect(() => {\n    if (page > 1) {\n      dispatch(fetchData(page));\n    }\n  }, [dispatch, page]);\n\n  const loadMore = () => {\n    setPage(prevState => (prevState += 1));\n  };\n  return (\n    <>\n      <Filter />\n      {filteredCars.length > 0 && (\n        <>\n          <List>\n            {filteredCars.map(car => (\n              <li key={car.id}>\n                <CarCard car={car} />\n              </li>\n            ))}\n          </List>\n          {!endOfList && filter === 'All' && (\n            <Button onClick={loadMore}>Load more</Button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { CarsList } from 'components/CarsList/CarsList';\nimport { selectError, selectIsLoading } from '../redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport default function Catalog() {\n  const isError = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <div>\n      {isLoading && (\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100vh',\n          }}\n        >\n          <RotatingLines\n            visible={true}\n            height=\"66\"\n            width=\"66\"\n            strokeColor=\"#3470ff\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            ariaLabel=\"rotating-lines-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n          />\n        </div>\n      )}\n      {isError && (\n        <p>Whoops... Something went wrong. Please try to reload the page.</p>\n      )}\n      {!isError && <CarsList />}\n    </div>\n  );\n}\n"],"names":["filterSchema","Yup","shape","brand","price","mileageFrom","mileageTo","Filter","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","changeFilterBrand","changeFilterPrice","changeFilterMileageFrom","changeFilterMileageTo","children","_jsxs","Form","Field","as","name","Makes","make","idx","value","Prices","type","CarsList","_useState","useState","_useState2","_slicedToArray","page","setPage","filteredCars","useSelector","selectFilteredCars","filter","selectFilterBrand","endOfList","selectEndofList","useEffect","fetchData","_Fragment","length","List","map","car","CarCard","id","Button","onClick","prevState","Catalog","isError","selectError","isLoading","selectIsLoading","style","display","justifyContent","alignItems","height","RotatingLines","visible","width","strokeColor","strokeWidth","animationDuration","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}